<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_852107_enterpr_0_engagement</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_852107_enterpr_0_engagement">u_journal_13VALCHANGES^EQ<item endquery="false" field="u_journal_13" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>super user</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your cod(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var reviewers = current.u_glide_list_8.toString().split(',');
	reviewers.push(gs.getUserDisplayName());
	
	var reviewed_by = current.u_glide_list_7.toString().split(',');
	
 	if (memberOf(current.u_reference_6.toString(),gs.getUserID())){
		if (alreadyAdded(reviewers, gs.getUserID()) == false){
			current.u_glide_list_7 = afterRemove(gs.getUserID());
			current.u_glide_list_8 = reviewers.toString();
		}
		//current.u_choice_1 = 'awaiting_review';
// 	}
	function afterRemove(user){
		var list = [];
		for (var i=0; i<u_glide_list_9.length;i++){
			if (reviewed_by[i]!=user){
				list.push(reviewed_by[i]);
			}
		}
		return list.toString();
	}
	function memberOf(group, user){
		var member = new GlideRecord("sys_user_grmember");
		member.addQuery("user",user);
		member.addEncodedQuery("group=" +group);
		member.query();
	}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-08 05:22:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f9812c8b2f302110b66ad3f62799b6cf</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>super user</sys_name>
        <sys_overrides/>
        <sys_package display_value="Enterprise Governance Architecture" source="x_852107_enterpr_0">6a425ed92fdc6110b66ad3f62799b640</sys_package>
        <sys_policy/>
        <sys_scope display_value="Enterprise Governance Architecture">6a425ed92fdc6110b66ad3f62799b640</sys_scope>
        <sys_update_name>sys_script_f9812c8b2f302110b66ad3f62799b6cf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-11 08:09:58</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f9812c8b2f302110b66ad3f62799b6cf"/>
</record_update>
